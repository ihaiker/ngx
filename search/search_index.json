{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NGX NGX \u4e00\u4e2a\u53ef\u4ee5\u89e3\u6790\u7c7b\u4f3cnginx.conf\u914d\u7f6e\u6587\u4ef6\u7684Golang\u7c7b\u5e93\u3002 \u529f\u80fd\u7279\u6027 \u89e3\u6790\u7c7b\u4f3c nginx.conf \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u6210Golang\u7ed3\u6784\u4f53\uff0c\u5e8f\u5217\u5316Golang\u7ed3\u6784\u4f53\u5230\u914d\u7f6e\u6587\u4ef6\u3002 \u63d0\u4f9b\u914d\u7f6e\u67e5\u8be2\u8bed\u8a00pql, \u65b9\u4fbf\u67e5\u8be2\u914d\u7f6e\u9879\u67e5\u8be2. \u914d\u7f6e\u6587\u4ef6\u52a8\u6001\u5316\uff0c\u6839\u636e\u53c2\u6570\u751f\u6210\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6a21\u677f\u5316\u914d\u7f6e\u6587\u4ef6. \u89e3\u6790\u540e\u7f6ehook\u5904\u7406\u64cd\u4f5c\uff0c\u9488\u5bf9\u914d\u7f6e\u8fdb\u884c\u7279\u51fa\u5904\u7406\u3002 \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00pql\u63d0\u4f9b\u7528\u6237\u81ea\u5b9a\u4e49\u6269\u5c55. \u6dfb\u52a0 NGXQ \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e3angx\u914d\u7f6e\u6587\u4ef6\u7684\u67e5\u8be2\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002 \u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\u4e8ejson\u7684\u67e5\u8be2\u5de5\u5177 [ JQ ][1] \u548cyaml\u7684\u67e5\u8be2 [ YQ ][2]\u3002 \u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u6210json\u683c\u5f0f \u4f7f\u7528\u6307\u5357\uff08Starting Guide\uff09 \u89e3\u6790\u914d\u7f6e\u6587\u4ef6 parse configuration files \u7cfb\u5217\u5316/\u53cd\u5e8f\u5217\u5316 Marshal/Unmarshal \u8f6c\u6362\u4e3aJSON \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00 PQL \u540e\u7f6e\u64cd\u4f5c Post-hooks \u547d\u4ee4\u5de5\u5177 NGX","title":"\u7b80\u4ecb"},{"location":"#ngx","text":"NGX \u4e00\u4e2a\u53ef\u4ee5\u89e3\u6790\u7c7b\u4f3cnginx.conf\u914d\u7f6e\u6587\u4ef6\u7684Golang\u7c7b\u5e93\u3002","title":"NGX"},{"location":"#_1","text":"\u89e3\u6790\u7c7b\u4f3c nginx.conf \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u6210Golang\u7ed3\u6784\u4f53\uff0c\u5e8f\u5217\u5316Golang\u7ed3\u6784\u4f53\u5230\u914d\u7f6e\u6587\u4ef6\u3002 \u63d0\u4f9b\u914d\u7f6e\u67e5\u8be2\u8bed\u8a00pql, \u65b9\u4fbf\u67e5\u8be2\u914d\u7f6e\u9879\u67e5\u8be2. \u914d\u7f6e\u6587\u4ef6\u52a8\u6001\u5316\uff0c\u6839\u636e\u53c2\u6570\u751f\u6210\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6a21\u677f\u5316\u914d\u7f6e\u6587\u4ef6. \u89e3\u6790\u540e\u7f6ehook\u5904\u7406\u64cd\u4f5c\uff0c\u9488\u5bf9\u914d\u7f6e\u8fdb\u884c\u7279\u51fa\u5904\u7406\u3002 \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00pql\u63d0\u4f9b\u7528\u6237\u81ea\u5b9a\u4e49\u6269\u5c55. \u6dfb\u52a0 NGXQ \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e3angx\u914d\u7f6e\u6587\u4ef6\u7684\u67e5\u8be2\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002 \u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\u4e8ejson\u7684\u67e5\u8be2\u5de5\u5177 [ JQ ][1] \u548cyaml\u7684\u67e5\u8be2 [ YQ ][2]\u3002 \u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u6210json\u683c\u5f0f","title":"\u529f\u80fd\u7279\u6027"},{"location":"#starting-guide","text":"\u89e3\u6790\u914d\u7f6e\u6587\u4ef6 parse configuration files \u7cfb\u5217\u5316/\u53cd\u5e8f\u5217\u5316 Marshal/Unmarshal \u8f6c\u6362\u4e3aJSON \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00 PQL \u540e\u7f6e\u64cd\u4f5c Post-hooks \u547d\u4ee4\u5de5\u5177 NGX","title":"\u4f7f\u7528\u6307\u5357\uff08Starting Guide\uff09"},{"location":"cli/","text":"come soon","title":"\u547d\u4ee4\u884c\u5de5\u5177"},{"location":"cli/#come-soon","text":"","title":"come soon"},{"location":"hooks/","text":"come soon","title":"\u540e\u7f6ehook"},{"location":"hooks/#come-soon","text":"","title":"come soon"},{"location":"json/","text":"come soon","title":"\u8f6c\u4e3aJSON"},{"location":"json/#come-soon","text":"","title":"come soon"},{"location":"marshal/","text":"Marshal & Unmarshal \u9605\u8bfb\u672c\u7ae0\u8282\u4e4b\u524d\u60a8\u9700\u8981\u5148\u884c\u9605\u8bfb \u89e3\u6790\u914d\u7f6e\u6587\u4ef6 json.Marshal & json.Unmarshal \u5982\u679c\u60a8\u4e86\u89e3 json.Marshal \u548c json.Unmarshal \u90a3\u4e48\u672c\u7ae0\u8282\u5c31\u7b80\u5355\u7684\u591a\uff08\u4e0d\u4e86\u89e3\uff1f \u70b9\u51fb\u4e86\u89e3 \uff09\u3002 \u7531\u4e8e\u914d\u7f6e\u6587\u4ef6\u7684\u7279\u6b8a\u6027\uff1a \u5757 \u65e2\u53ef\u4ee5\u5305\u542b \u53c2\u6570 \u4ea6\u53ef\u4ee5\u5305\u542b \u5b50\u5757 \u3002\u800c\u5728 json \u6216 yaml \u4e2d\u4e0d\u5b58\u5728\u8fd9\u5217\u60c5\u51b5\u3002 \u6240\u4ee5\u6211\u4eec\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u8bb2\u89e3 Marshal: \u7b80\u5355\u6a21\u5f0f\uff1a \u5757 \u5b58\u5728\u53c2\u6570\u5c31\u4e0d\u5b58\u5728 \u5b50\u5757 , Args \u548c Body \u4e0d\u540c\u65f6\u5b58\u5728\u3002 \u7b26\u5408\u6a21\u5f0f\uff1a \u4e24\u8005\u540c\u65f6\u5b58\u5728 \u540d\u8bcd\u89e3\u91ca \u57fa\u7840\u7c7b\u578b \uff1aint,[u]int[8|16|32|64],string,bool,time.Time\u7c7b\u578b\u4ee5\u53ca\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\u3002 \u7b80\u5355\u6a21\u5f0f \u52a0\u5165\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1a user haiker; address \"Beijing China\"; email ni@renzhen.la; workyear 10; Hobby basketball football \"D D D\" etc; time \"2021-06-11 12:13:14\"; \u5bf9\u5e94\u7684\u7684Golang\u7ed3\u6784\u4f53\uff1a type User struct { UserName string `ngx:\"user\"` Address string `ngx:\"address\"` Email string `ngx:\"email\"` Year int `ngx:\"workyear\"` Hobby []string Time time.Time `ngx:\"time,2016-01-02 15:04:05\"` } \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Marshal \u548c json.Marshal \u662f\u4e00\u6837\u7684\u5904\u7406\u53d1\u65b9\u5f0f\u3002 \u7565\u8fc7\u3002\u3002\u3002\u3002\u3002 \uff0c\u6211\u4eec\u5c06\u628a\u91cd\u70b9\u653e\u5728\u590d\u6742\u6a21\u5f0f\u4e0a\u3002 \u590d\u6742\u6a21\u5f0f \u590d\u6742\u6a21\u5f0f\u662f\u9488\u5bf9\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\u578b\u505a\u51fa\u7684\u5904\u7406\u3002\u4ed6\u4eec\u5305\u62ec\u4e86`slice`\u548c`map` \u5207\u7247Slice\u7c7b\u578b 1\u3001\u57fa\u7840\u7c7b\u578b\u7684\u5207\u7247 \u5bf9\u4e8e []int , []string , []bool \u7b49\u57fa\u672c\u7c7b\u578b\u7684\u5207\u7247\u800c\u8a00\uff0c\u6211\u4eec\u53ea\u53ef\u4ee5\u4f7f\u7528 \u5757 \u7684\u53c2\u6570 args \u8d4b\u503c\u3002 \u4f8b\u5982\uff1a \u5728\u7b80\u5355\u6a21\u5f0f\u4e2d User.Hobby \u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u65b9\u5f0f\u65b9\u5f0f\u8d4b\u4e88\u5176\u503c\u3002 Hobby basketball football \"D D D\" etc; \u4e5f\u53ef\u4ee5\u4fee\u6539\u4e3a\u591a\u6b21\u6307\u4ee4\u8d4b\u4e88slice\u503c\u3002 Hobby basketball; Hobby football; Hobby \"D D D\" etc; \u4e0a\u9762\u4e24\u79cd\u65b9\u5f0f\u65e0\u8bba\u54ea\u4e2a\u5bf9\u4e8e\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u81f4\u7684\u3002 2\u3001\u975e\u57fa\u7840\u578b\u7684\u5207\u7247 \u5bf9\u4e8e\u975e\u57fa\u7840\u7c7b\u578b\u7684\u5207\u7247\uff0c\u5c31\u4e0d\u53ef\u4ee5\u50cf\u57fa\u7840\u7c7b\u578b\u90a3\u6837\u4e86\u4e24\u8005\u5747\u53ef\u4f7f\u7528\u3002\u975e\u57fa\u7840\u7c7b\u578b\u53ea\u80fd\u91c7\u7528\u591a \u5757 \u914d\u7f6e\u65b9\u5f0f\u3002 \u4f8b\u5982\uff1a\u5f53\u914d\u7f6e Group \u4e2d\u5305\u542b []*User \u5b57\u6bb5 \u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\u3002 type Group struct { Users []*User `ngx:\"users\"` } \u914d\u7f6e\u5982\u4e0b users { user haiker; address \"Beijing China\"; email ni@renzhen.la; workyear 10; Hobby basketball football \"D D D\" etc; time \"2021-06-11 12:13:14\"; } users { user submitter; address \"Beijing China\"; email demo@example.com; workyear 10; Hobby basketball; time \"2021-06-11 12:13:14\"; } ... map\u7c7b\u578b Note: \u914d\u7f6e\u6587\u4ef6\u8f6c\u4e3amap\u7684\u7c7b\u578b\uff0c\u662f\u6709\u4e00\u5b9a\u7684\u89c4\u5b9a\uff0c\u5728map\u7684key\u503c\u7c7b\u578b\u53ea\u80fd\u4e3a\u57fa\u7840\u7c7b\u578b\u3002 1\u3001\u5bf9\u4e8evalue\u4e3a\u57fa\u7840\u7c7b\u578b \u6211\u4eec\u5c06\u76f4\u63a5\u91c7\u7528 \u5757 \u7684 \u53c2\u6570 \u8fdb\u884c\u503c\u7684\u8d4b\u4e88\uff0c\u4e14 \u53c2\u65701 \u4e3amap\u7684key, \u53c2\u65702 \u4e3amap\u7684value\u3002 mapFiled mapKey mapValue; mapFiled mapKey mapValue; mapFiled mapKey mapValue; mapFiled1 mapKey mapValue; mapFiled1 mapKey mapValue; mapFiled1 mapKey mapValue; 2\u3001\u5bf9\u4e8evalue\u975e\u57fa\u7840\u7c7b\u578b 1\u3001\u65b9\u5f0f\u4e00\uff1a \u5757 \u7684 \u53c2\u65701 \u4f5c\u4e3akey\uff0c \u5b50\u5757 \u4f5c\u4e3avalue\u7684\u914d\u7f6e\u3002 mapField key1 { valueField value; ... } mapField key2 { valueField value; ... } 2\u3001\u65b9\u5f0f\u4e8c\uff1a \u5757 \u7684 \u5b50\u5757 \u5757\u540d\u79f0\u4f5c\u4e3akey mapField { key1 { valueField value; ... } key2 { valueField value; ... } } \u4e0a\u9762\u4e24\u79cd\u65b9\u5f0f\u914d\u7f6eUnmarshal\u540e\u5bf9\u5e94\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u7684\u3002 \u5982\u679c\u91c7\u7528\u4e86\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u914d\u7f6emap\u5e76\u4e14\u5728\u5b50\u5757\u4e0a\u4e5f\u6dfb\u52a0\u4e86\u53c2\u6570\uff0c\u5c06\u4f1a\u62a5\u9519\u3002 \u4f8b\u5982\uff1a mapField { key1 arg0 { ## \u8fd9\u91cc\u4e0d\u5141\u8bb8\u518d\u6b21\u6dfb\u52a0\u53c2\u6570\u3002\u3002 valueField value; ... } key2 { valueField value; ... } } \u91cd\u590d\u8986\u76d6 \u7531\u4e8e\u6587\u4ef6\u7279\u6027\uff0c\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u6307\u5b9a\u76f8\u540c\u7684 \u5757\u540d\u79f0 \u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u6587\u4ef6\u672c\u7701\u5e76\u4e0d\u5b58\u5728\u9519\u8bef\uff0c\u4f46\u662f\u6211\u4eec\u624d\u7528 Unmarshal \u540e\u5bf9\u5e94\u7684\u4e00\u4e2a \u57fa\u7840\u7c7b\u578b \u5b57\u6bb5\u4e0a\u7684\u8bdd\uff0c\u76f8\u5f53\u4e8e\u5bf9\u6b64\u8d4b\u503c\uff0c\u6700\u540e\u51fa\u73b0\u7684\u4e00\u6b21\u5c06\u751f\u6548\uff0c\u8bf7\u6ce8\u610f\u8fd9\u4e2a\u9ed8\u8ba4\u9009\u9879\u3002 \u81ea\u5b9a\u4e49\u89e3\u6790 \u5982\u540c encoding/json \u5b9a\u4e49\u7684 json.Unmarshaler \u548c json.Marshaler \u4e00\u6837\uff0c ngx\u4e5f\u5b9a\u4e49\u4e86 encoding.Marshaler \u548c encoding.Unmarshalers \u65b9\u6cd5, \u5b9a\u4e49\u5982\u4e0b\uff1a type Marshaler interface { MarshalNgx() (*config.Configuration, error) } type Unmarshaler interface { UnmarshalNgx(item *config.Configuration) error } \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u89e3\u6790\u65b9\u5f0f\u5b9e\u73b0\u8be5\u65b9\u6cd5\u5373\u53ef\u3002\u4f8b\u5982\uff1a type User struct { UserName string `ngx:\"name\"` Address string `ngx:\"address\"` Email string `ngx:\"email\"` Year int `ngx:\"workyear\"` Hobby []string Time time.Time `ngx:\"time,2016-01-02 15:04:05\"` } func (user *User) MarshalNgx() (conf *config.Configuration,err error) { conf = &config.Configuration{ Body: config.Directives{}, } firstAndLastName := strings.SplitN(user.Name,\".\", 2) conf.Body = append(conf.Body,config.New(\"firstName\",firstAndLastName[0])) conf.Body = append(conf.Body,config.New(\"lastName\",firstAndLastName[1])) conf.Body = append(conf.Body,config.New(\"address\",user.Address)) ... return } func (user *User) UnmarshalNgx(item *config.Configuration) (err error) { if len(item.Body) == 0 { return } if firstName := item.Body.Get(\"firstName\"); firstName != nil { user.UserName = firstName.Args[0] } if lastName := item.Body.Get(\"lastName\"); lastName != nil { user.UserName = lastName.Args[0] } return } \u6211\u4eec\u7684 User \u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u5b9e\u73b0 encoding.Marshaler \u548c encoding.Unmarshaler \u65b9\u6cd5\u53bb\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u89e3\u6790\u3002 \u5982\u679c\u6211\u4eec\u5728\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86\u7b2c\u4e09\u65b9\u7684\u5e93\uff0c\u6b64\u65f6\u65e0\u6cd5\u8ba9\u7ed3\u6784\u5f0f\u5b9e\u73b0\u63a5\u53e3\uff0c \u56e0\u6b64\u7cfb\u7edf\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86 encoding.RegTypeHandler(v interface{}, handler encoding.TypeHandler) \u65b9\u6cd5\u6307\u5b9a\u7279\u5b9a\u7b2c\u4e09\u65b9\u7c7b\u578b\u7684\u89e3\u6790\u65b9\u5f0f\u3002 encoding.TypeHandler \u5b9a\u4e49\u5982\u4e0b\uff1a TypeHandler interface { MarshalNgx(v interface{}) (*config.Configuration, error) UnmarshalNgx(item *config.Configuration) (v interface{}, err error) } \u66f4\u591a\u73a9\u6cd5\uff0c\u8d76\u5feb\u8bd5\u7528\u8d77\u6765\u5427\u3002 \u8f6cJSON\u914d\u7f6e \u672c\u914d\u7f6e\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u5c06\u914d\u7f6e\u8f6c\u6362\u4e3aJSON\u914d\u7f6e \u4e86\u89e3\u66f4\u591a Note: \u5f00\u6e90\u4f5c\u8005\u7684\u82f1\u8bed\u80fd\u529b\u6709\u9650\uff0c\u7f16\u5199\u6587\u6863\u82f1\u6587\u5168\u9760\u7ffb\u8bd1\u8f6f\u4ef6\uff0c\u96be\u514d\u5b58\u5728\u6b67\u4e49\uff0c \u5982\u679c\u60a8\u53ef\u4ee5\u4e3a\u672c\u8f6f\u4ef6\u7f16\u5199\u82f1\u6587\u6587\u6863\u8bf7\u8054\u7cfb\u4f5c\u8005 Haiker \u6216\u63d0\u4ea4PR\uff0c \u611f\u8c22\u60a8\u5bf9\u672c\u5de5\u5177\u7684\u505a\u51fa\u7684\u8d21\u732e\u3002","title":"Marshal/Unmarshal"},{"location":"marshal/#marshal-unmarshal","text":"\u9605\u8bfb\u672c\u7ae0\u8282\u4e4b\u524d\u60a8\u9700\u8981\u5148\u884c\u9605\u8bfb \u89e3\u6790\u914d\u7f6e\u6587\u4ef6 json.Marshal & json.Unmarshal \u5982\u679c\u60a8\u4e86\u89e3 json.Marshal \u548c json.Unmarshal \u90a3\u4e48\u672c\u7ae0\u8282\u5c31\u7b80\u5355\u7684\u591a\uff08\u4e0d\u4e86\u89e3\uff1f \u70b9\u51fb\u4e86\u89e3 \uff09\u3002 \u7531\u4e8e\u914d\u7f6e\u6587\u4ef6\u7684\u7279\u6b8a\u6027\uff1a \u5757 \u65e2\u53ef\u4ee5\u5305\u542b \u53c2\u6570 \u4ea6\u53ef\u4ee5\u5305\u542b \u5b50\u5757 \u3002\u800c\u5728 json \u6216 yaml \u4e2d\u4e0d\u5b58\u5728\u8fd9\u5217\u60c5\u51b5\u3002 \u6240\u4ee5\u6211\u4eec\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u8bb2\u89e3 Marshal: \u7b80\u5355\u6a21\u5f0f\uff1a \u5757 \u5b58\u5728\u53c2\u6570\u5c31\u4e0d\u5b58\u5728 \u5b50\u5757 , Args \u548c Body \u4e0d\u540c\u65f6\u5b58\u5728\u3002 \u7b26\u5408\u6a21\u5f0f\uff1a \u4e24\u8005\u540c\u65f6\u5b58\u5728","title":"Marshal &amp; Unmarshal"},{"location":"marshal/#_1","text":"\u57fa\u7840\u7c7b\u578b \uff1aint,[u]int[8|16|32|64],string,bool,time.Time\u7c7b\u578b\u4ee5\u53ca\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\u3002","title":"\u540d\u8bcd\u89e3\u91ca"},{"location":"marshal/#_2","text":"\u52a0\u5165\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1a user haiker; address \"Beijing China\"; email ni@renzhen.la; workyear 10; Hobby basketball football \"D D D\" etc; time \"2021-06-11 12:13:14\"; \u5bf9\u5e94\u7684\u7684Golang\u7ed3\u6784\u4f53\uff1a type User struct { UserName string `ngx:\"user\"` Address string `ngx:\"address\"` Email string `ngx:\"email\"` Year int `ngx:\"workyear\"` Hobby []string Time time.Time `ngx:\"time,2016-01-02 15:04:05\"` } \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Marshal \u548c json.Marshal \u662f\u4e00\u6837\u7684\u5904\u7406\u53d1\u65b9\u5f0f\u3002 \u7565\u8fc7\u3002\u3002\u3002\u3002\u3002 \uff0c\u6211\u4eec\u5c06\u628a\u91cd\u70b9\u653e\u5728\u590d\u6742\u6a21\u5f0f\u4e0a\u3002","title":"\u7b80\u5355\u6a21\u5f0f"},{"location":"marshal/#_3","text":"\u590d\u6742\u6a21\u5f0f\u662f\u9488\u5bf9\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\u578b\u505a\u51fa\u7684\u5904\u7406\u3002\u4ed6\u4eec\u5305\u62ec\u4e86`slice`\u548c`map`","title":"\u590d\u6742\u6a21\u5f0f"},{"location":"marshal/#slice","text":"","title":"\u5207\u7247Slice\u7c7b\u578b"},{"location":"marshal/#1","text":"\u5bf9\u4e8e []int , []string , []bool \u7b49\u57fa\u672c\u7c7b\u578b\u7684\u5207\u7247\u800c\u8a00\uff0c\u6211\u4eec\u53ea\u53ef\u4ee5\u4f7f\u7528 \u5757 \u7684\u53c2\u6570 args \u8d4b\u503c\u3002 \u4f8b\u5982\uff1a \u5728\u7b80\u5355\u6a21\u5f0f\u4e2d User.Hobby \u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u65b9\u5f0f\u65b9\u5f0f\u8d4b\u4e88\u5176\u503c\u3002 Hobby basketball football \"D D D\" etc; \u4e5f\u53ef\u4ee5\u4fee\u6539\u4e3a\u591a\u6b21\u6307\u4ee4\u8d4b\u4e88slice\u503c\u3002 Hobby basketball; Hobby football; Hobby \"D D D\" etc; \u4e0a\u9762\u4e24\u79cd\u65b9\u5f0f\u65e0\u8bba\u54ea\u4e2a\u5bf9\u4e8e\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u81f4\u7684\u3002","title":"1\u3001\u57fa\u7840\u7c7b\u578b\u7684\u5207\u7247"},{"location":"marshal/#2","text":"\u5bf9\u4e8e\u975e\u57fa\u7840\u7c7b\u578b\u7684\u5207\u7247\uff0c\u5c31\u4e0d\u53ef\u4ee5\u50cf\u57fa\u7840\u7c7b\u578b\u90a3\u6837\u4e86\u4e24\u8005\u5747\u53ef\u4f7f\u7528\u3002\u975e\u57fa\u7840\u7c7b\u578b\u53ea\u80fd\u91c7\u7528\u591a \u5757 \u914d\u7f6e\u65b9\u5f0f\u3002 \u4f8b\u5982\uff1a\u5f53\u914d\u7f6e Group \u4e2d\u5305\u542b []*User \u5b57\u6bb5 \u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\u3002 type Group struct { Users []*User `ngx:\"users\"` } \u914d\u7f6e\u5982\u4e0b users { user haiker; address \"Beijing China\"; email ni@renzhen.la; workyear 10; Hobby basketball football \"D D D\" etc; time \"2021-06-11 12:13:14\"; } users { user submitter; address \"Beijing China\"; email demo@example.com; workyear 10; Hobby basketball; time \"2021-06-11 12:13:14\"; } ...","title":"2\u3001\u975e\u57fa\u7840\u578b\u7684\u5207\u7247"},{"location":"marshal/#map","text":"Note: \u914d\u7f6e\u6587\u4ef6\u8f6c\u4e3amap\u7684\u7c7b\u578b\uff0c\u662f\u6709\u4e00\u5b9a\u7684\u89c4\u5b9a\uff0c\u5728map\u7684key\u503c\u7c7b\u578b\u53ea\u80fd\u4e3a\u57fa\u7840\u7c7b\u578b\u3002","title":"map\u7c7b\u578b"},{"location":"marshal/#1value","text":"\u6211\u4eec\u5c06\u76f4\u63a5\u91c7\u7528 \u5757 \u7684 \u53c2\u6570 \u8fdb\u884c\u503c\u7684\u8d4b\u4e88\uff0c\u4e14 \u53c2\u65701 \u4e3amap\u7684key, \u53c2\u65702 \u4e3amap\u7684value\u3002 mapFiled mapKey mapValue; mapFiled mapKey mapValue; mapFiled mapKey mapValue; mapFiled1 mapKey mapValue; mapFiled1 mapKey mapValue; mapFiled1 mapKey mapValue;","title":"1\u3001\u5bf9\u4e8evalue\u4e3a\u57fa\u7840\u7c7b\u578b"},{"location":"marshal/#2value","text":"1\u3001\u65b9\u5f0f\u4e00\uff1a \u5757 \u7684 \u53c2\u65701 \u4f5c\u4e3akey\uff0c \u5b50\u5757 \u4f5c\u4e3avalue\u7684\u914d\u7f6e\u3002 mapField key1 { valueField value; ... } mapField key2 { valueField value; ... } 2\u3001\u65b9\u5f0f\u4e8c\uff1a \u5757 \u7684 \u5b50\u5757 \u5757\u540d\u79f0\u4f5c\u4e3akey mapField { key1 { valueField value; ... } key2 { valueField value; ... } } \u4e0a\u9762\u4e24\u79cd\u65b9\u5f0f\u914d\u7f6eUnmarshal\u540e\u5bf9\u5e94\u7684\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u7684\u3002 \u5982\u679c\u91c7\u7528\u4e86\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u914d\u7f6emap\u5e76\u4e14\u5728\u5b50\u5757\u4e0a\u4e5f\u6dfb\u52a0\u4e86\u53c2\u6570\uff0c\u5c06\u4f1a\u62a5\u9519\u3002 \u4f8b\u5982\uff1a mapField { key1 arg0 { ## \u8fd9\u91cc\u4e0d\u5141\u8bb8\u518d\u6b21\u6dfb\u52a0\u53c2\u6570\u3002\u3002 valueField value; ... } key2 { valueField value; ... } }","title":"2\u3001\u5bf9\u4e8evalue\u975e\u57fa\u7840\u7c7b\u578b"},{"location":"marshal/#_4","text":"\u7531\u4e8e\u6587\u4ef6\u7279\u6027\uff0c\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u6307\u5b9a\u76f8\u540c\u7684 \u5757\u540d\u79f0 \u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u6587\u4ef6\u672c\u7701\u5e76\u4e0d\u5b58\u5728\u9519\u8bef\uff0c\u4f46\u662f\u6211\u4eec\u624d\u7528 Unmarshal \u540e\u5bf9\u5e94\u7684\u4e00\u4e2a \u57fa\u7840\u7c7b\u578b \u5b57\u6bb5\u4e0a\u7684\u8bdd\uff0c\u76f8\u5f53\u4e8e\u5bf9\u6b64\u8d4b\u503c\uff0c\u6700\u540e\u51fa\u73b0\u7684\u4e00\u6b21\u5c06\u751f\u6548\uff0c\u8bf7\u6ce8\u610f\u8fd9\u4e2a\u9ed8\u8ba4\u9009\u9879\u3002","title":"\u91cd\u590d\u8986\u76d6"},{"location":"marshal/#_5","text":"\u5982\u540c encoding/json \u5b9a\u4e49\u7684 json.Unmarshaler \u548c json.Marshaler \u4e00\u6837\uff0c ngx\u4e5f\u5b9a\u4e49\u4e86 encoding.Marshaler \u548c encoding.Unmarshalers \u65b9\u6cd5, \u5b9a\u4e49\u5982\u4e0b\uff1a type Marshaler interface { MarshalNgx() (*config.Configuration, error) } type Unmarshaler interface { UnmarshalNgx(item *config.Configuration) error } \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u89e3\u6790\u65b9\u5f0f\u5b9e\u73b0\u8be5\u65b9\u6cd5\u5373\u53ef\u3002\u4f8b\u5982\uff1a type User struct { UserName string `ngx:\"name\"` Address string `ngx:\"address\"` Email string `ngx:\"email\"` Year int `ngx:\"workyear\"` Hobby []string Time time.Time `ngx:\"time,2016-01-02 15:04:05\"` } func (user *User) MarshalNgx() (conf *config.Configuration,err error) { conf = &config.Configuration{ Body: config.Directives{}, } firstAndLastName := strings.SplitN(user.Name,\".\", 2) conf.Body = append(conf.Body,config.New(\"firstName\",firstAndLastName[0])) conf.Body = append(conf.Body,config.New(\"lastName\",firstAndLastName[1])) conf.Body = append(conf.Body,config.New(\"address\",user.Address)) ... return } func (user *User) UnmarshalNgx(item *config.Configuration) (err error) { if len(item.Body) == 0 { return } if firstName := item.Body.Get(\"firstName\"); firstName != nil { user.UserName = firstName.Args[0] } if lastName := item.Body.Get(\"lastName\"); lastName != nil { user.UserName = lastName.Args[0] } return } \u6211\u4eec\u7684 User \u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u5b9e\u73b0 encoding.Marshaler \u548c encoding.Unmarshaler \u65b9\u6cd5\u53bb\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u89e3\u6790\u3002 \u5982\u679c\u6211\u4eec\u5728\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86\u7b2c\u4e09\u65b9\u7684\u5e93\uff0c\u6b64\u65f6\u65e0\u6cd5\u8ba9\u7ed3\u6784\u5f0f\u5b9e\u73b0\u63a5\u53e3\uff0c \u56e0\u6b64\u7cfb\u7edf\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86 encoding.RegTypeHandler(v interface{}, handler encoding.TypeHandler) \u65b9\u6cd5\u6307\u5b9a\u7279\u5b9a\u7b2c\u4e09\u65b9\u7c7b\u578b\u7684\u89e3\u6790\u65b9\u5f0f\u3002 encoding.TypeHandler \u5b9a\u4e49\u5982\u4e0b\uff1a TypeHandler interface { MarshalNgx(v interface{}) (*config.Configuration, error) UnmarshalNgx(item *config.Configuration) (v interface{}, err error) } \u66f4\u591a\u73a9\u6cd5\uff0c\u8d76\u5feb\u8bd5\u7528\u8d77\u6765\u5427\u3002","title":"\u81ea\u5b9a\u4e49\u89e3\u6790"},{"location":"marshal/#json","text":"\u672c\u914d\u7f6e\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u5c06\u914d\u7f6e\u8f6c\u6362\u4e3aJSON\u914d\u7f6e \u4e86\u89e3\u66f4\u591a Note: \u5f00\u6e90\u4f5c\u8005\u7684\u82f1\u8bed\u80fd\u529b\u6709\u9650\uff0c\u7f16\u5199\u6587\u6863\u82f1\u6587\u5168\u9760\u7ffb\u8bd1\u8f6f\u4ef6\uff0c\u96be\u514d\u5b58\u5728\u6b67\u4e49\uff0c \u5982\u679c\u60a8\u53ef\u4ee5\u4e3a\u672c\u8f6f\u4ef6\u7f16\u5199\u82f1\u6587\u6587\u6863\u8bf7\u8054\u7cfb\u4f5c\u8005 Haiker \u6216\u63d0\u4ea4PR\uff0c \u611f\u8c22\u60a8\u5bf9\u672c\u5de5\u5177\u7684\u505a\u51fa\u7684\u8d21\u732e\u3002","title":"\u8f6cJSON\u914d\u7f6e"},{"location":"parse/","text":"\u4f7f\u7528\u6307\u5357 \u5b89\u88c5 go get github.com/ihaiker/ngx/v2 \u5b9e\u4f8b Note: \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528nginx\u7684\u914d\u7f6e\u6587\u4ef6\u505a\u8bb2\u89e3 \u52a0\u5165\u6211\u4eec\u5df2\u6709 /etc/nginx/nginx.conf \u914d\u7f6e\u6587\u4ef6\uff0c\u4e14\u5185\u5bb9\u5982\u4e0b\uff1a user nobody; worker_processes auto; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; # access_log /var/log/nginx/access.log main; sendfile on; # tcp_nopush on; keepalive_timeout 65; gzip on; include conf.d/*.conf; } \u89e3\u6790Golang\u4ee3\u7801\u5982\u4e0b\uff1a package main import ( \"fmt\" \"github.com/ihaiker/ngx/v2\" ) func main() { conf, err := ngx.Parse(\"/etc/nginx/nginx.conf\") if err != nil { fmt.Println(err) return } fmt.Println(\"--- configuration body ---\") for i, item := range conf.Body { fmt.Println(i, \": \", item.Name) } fmt.Println(\"--- http body ---\") for i, item := range conf.Body[3].Body { fmt.Println(i, \": \", item.Name) } } run it, the following will be print: --- configuration body --- 0 : user 1 : worker_processes 2 : events 3 : http --- http body --- 0 : include 1 : default_type 2 : log_format 3 : # 4 : sendfile 5 : # 6 : keepalive_timeout 7 : gzip 8 : include include args: mime.types \u7ed3\u6784\u8bf4\u660e \u9996\u5148\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784\u3002\u7ed3\u6784\u6709\u4ee5\u4e0b\u89c4\u5219\uff1a name [arg0 arg1 arg3 ...]; name [arg0 arg1 ... argN] { name [arg0 arg1 ...]; name [arg0 arg1 ...]; } \u7531\u4e0a\u7ed3\u6784\u53ef\u5206\u6790\u51fa\uff0c\u7ec4\u6210\u4ed6\u7684\u6700\u5c0f\u5316\u5355\u5143\u662f\u5757\uff0c\u8fd9\u4e2a\u5757\u7531 \u5757\u540d\u79f0 name \uff0c \u5757\u53c2\u6570 arg0 arg1 arg2 (\u53ef\u9009\u7684), \u5b50\u5757 \uff08\u53ef\u9009\uff09\u7ec4\u6210\uff0c \u4e14 \u5b50\u5757 \u7ed3\u6784\u4e5f\u662f\u6309\u7167\u5757\u7684\u7ed3\u6784\u7ec4\u6210\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u4e3a Golang \u7ed3\u6784\u4e3a: type Directive struct { Line int `json:\"line\"` Virtual Virtual `json:\"virtual,omitempty\"` Name string `json:\"name\"` Args []string `json:\"args,omitempty\"` Body Directives `json:\"body,omitempty\"` } \u5728 Golang struct Directive \u4e2d\u5305\u542b Line , Name , Args , Body \u5b57\u6bb5. Line \u5b57\u6bb5\u4fdd\u5b58\u4e86\u5f53\u524d\u5757\u51fa\u73b0\u5728\u6587\u4ef6\u7684\u884c\u53f7\uff0c Name \u5b57\u6bb5\u5b58\u653e\u5757\u7684\u540d\u79f0, Args \u5b57\u6bb5\u4e3a\u5757\u7684\u53c2\u6570, Body \u5b57\u6bb5\u4e3a\u5b50\u5757. Virtual \u5b57\u6bb5\u6709\u4e9b\u7279\u51fa\uff0c\u4e3a Post-hook \u65b9\u6cd5\u51c6\u5907\uff0c\u7528\u4e8e\u89e3\u51b3include\u8fd9\u6837\u7684\u7279\u51fa\u6307\u4ee4\u3002 \u8c03\u7528\u89e3\u6790\u540e\u7a0b\u5e8f\u4f1a\u751f\u6210 config.Configuration \u7ed3\u6784\u4f53\uff0c\u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f\u3002 type ( Directives []*Directive Configuration struct { Source string `json:\"source\"` //\u914d\u7f6e\u6587\u4ef6\u6765\u6e90\uff1afiles://, stdin, parse: hql Body Directives `json:\"body\"` } ) \u4f46\u662f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5230\u73b0\u5728\u867d\u7136\u6211\u4eec\u5df2\u7ecf\u5c06\u6587\u4ef6\u89e3\u6790\u4e86\uff0c\u4f46\u662f\u4ed6\u7684\u4f7f\u7528\u4e0a\u6765\u770b\u5e76\u4e0d\u662f\u5f88\u4f18\u96c5\uff0c \u6211\u4eec\u67e5\u627e\u4e00\u4e2a\u5b57\u6bb5\u7684\u65f6\u5019\u9700\u8981\u591a\u6b21\u5faa\u5e8f\uff0c\u4f8b\u5982\uff1a conf.Body[2].Body[1].Args[0] \u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e86\u65b9\u4fbf\u7684\u5904\u7406\u65b9\u5f0f\uff1a Marshal/Unmarshal\u6307\u5357 \u6574\u5408\u5230\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u4e2d\u3002 PQL\u67e5\u8be2\u8bed\u8a00 \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00\uff0c\u7b80\u5355\u5feb\u6377\u67e5\u8be2 Note: \u5f00\u6e90\u4f5c\u8005\u7684\u82f1\u8bed\u80fd\u529b\u6709\u9650\uff0c\u7f16\u5199\u6587\u6863\u82f1\u6587\u5168\u9760\u7ffb\u8bd1\u8f6f\u4ef6\uff0c\u96be\u514d\u5b58\u5728\u6b67\u4e49\uff0c \u5982\u679c\u60a8\u53ef\u4ee5\u4e3a\u672c\u8f6f\u4ef6\u7f16\u5199\u82f1\u6587\u6587\u6863\u8bf7\u8054\u7cfb\u4f5c\u8005 Haiker \u6216\u63d0\u4ea4PR\uff0c \u611f\u8c22\u60a8\u5bf9\u672c\u5de5\u5177\u7684\u505a\u51fa\u7684\u8d21\u732e\u3002","title":"\u89e3\u6790\u914d\u7f6e\u6587\u4ef6"},{"location":"parse/#_1","text":"","title":"\u4f7f\u7528\u6307\u5357"},{"location":"parse/#_2","text":"go get github.com/ihaiker/ngx/v2","title":"\u5b89\u88c5"},{"location":"parse/#_3","text":"Note: \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528nginx\u7684\u914d\u7f6e\u6587\u4ef6\u505a\u8bb2\u89e3 \u52a0\u5165\u6211\u4eec\u5df2\u6709 /etc/nginx/nginx.conf \u914d\u7f6e\u6587\u4ef6\uff0c\u4e14\u5185\u5bb9\u5982\u4e0b\uff1a user nobody; worker_processes auto; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; # access_log /var/log/nginx/access.log main; sendfile on; # tcp_nopush on; keepalive_timeout 65; gzip on; include conf.d/*.conf; } \u89e3\u6790Golang\u4ee3\u7801\u5982\u4e0b\uff1a package main import ( \"fmt\" \"github.com/ihaiker/ngx/v2\" ) func main() { conf, err := ngx.Parse(\"/etc/nginx/nginx.conf\") if err != nil { fmt.Println(err) return } fmt.Println(\"--- configuration body ---\") for i, item := range conf.Body { fmt.Println(i, \": \", item.Name) } fmt.Println(\"--- http body ---\") for i, item := range conf.Body[3].Body { fmt.Println(i, \": \", item.Name) } } run it, the following will be print: --- configuration body --- 0 : user 1 : worker_processes 2 : events 3 : http --- http body --- 0 : include 1 : default_type 2 : log_format 3 : # 4 : sendfile 5 : # 6 : keepalive_timeout 7 : gzip 8 : include include args: mime.types","title":"\u5b9e\u4f8b"},{"location":"parse/#_4","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784\u3002\u7ed3\u6784\u6709\u4ee5\u4e0b\u89c4\u5219\uff1a name [arg0 arg1 arg3 ...]; name [arg0 arg1 ... argN] { name [arg0 arg1 ...]; name [arg0 arg1 ...]; } \u7531\u4e0a\u7ed3\u6784\u53ef\u5206\u6790\u51fa\uff0c\u7ec4\u6210\u4ed6\u7684\u6700\u5c0f\u5316\u5355\u5143\u662f\u5757\uff0c\u8fd9\u4e2a\u5757\u7531 \u5757\u540d\u79f0 name \uff0c \u5757\u53c2\u6570 arg0 arg1 arg2 (\u53ef\u9009\u7684), \u5b50\u5757 \uff08\u53ef\u9009\uff09\u7ec4\u6210\uff0c \u4e14 \u5b50\u5757 \u7ed3\u6784\u4e5f\u662f\u6309\u7167\u5757\u7684\u7ed3\u6784\u7ec4\u6210\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u4e3a Golang \u7ed3\u6784\u4e3a: type Directive struct { Line int `json:\"line\"` Virtual Virtual `json:\"virtual,omitempty\"` Name string `json:\"name\"` Args []string `json:\"args,omitempty\"` Body Directives `json:\"body,omitempty\"` } \u5728 Golang struct Directive \u4e2d\u5305\u542b Line , Name , Args , Body \u5b57\u6bb5. Line \u5b57\u6bb5\u4fdd\u5b58\u4e86\u5f53\u524d\u5757\u51fa\u73b0\u5728\u6587\u4ef6\u7684\u884c\u53f7\uff0c Name \u5b57\u6bb5\u5b58\u653e\u5757\u7684\u540d\u79f0, Args \u5b57\u6bb5\u4e3a\u5757\u7684\u53c2\u6570, Body \u5b57\u6bb5\u4e3a\u5b50\u5757. Virtual \u5b57\u6bb5\u6709\u4e9b\u7279\u51fa\uff0c\u4e3a Post-hook \u65b9\u6cd5\u51c6\u5907\uff0c\u7528\u4e8e\u89e3\u51b3include\u8fd9\u6837\u7684\u7279\u51fa\u6307\u4ee4\u3002 \u8c03\u7528\u89e3\u6790\u540e\u7a0b\u5e8f\u4f1a\u751f\u6210 config.Configuration \u7ed3\u6784\u4f53\uff0c\u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f\u3002 type ( Directives []*Directive Configuration struct { Source string `json:\"source\"` //\u914d\u7f6e\u6587\u4ef6\u6765\u6e90\uff1afiles://, stdin, parse: hql Body Directives `json:\"body\"` } ) \u4f46\u662f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5230\u73b0\u5728\u867d\u7136\u6211\u4eec\u5df2\u7ecf\u5c06\u6587\u4ef6\u89e3\u6790\u4e86\uff0c\u4f46\u662f\u4ed6\u7684\u4f7f\u7528\u4e0a\u6765\u770b\u5e76\u4e0d\u662f\u5f88\u4f18\u96c5\uff0c \u6211\u4eec\u67e5\u627e\u4e00\u4e2a\u5b57\u6bb5\u7684\u65f6\u5019\u9700\u8981\u591a\u6b21\u5faa\u5e8f\uff0c\u4f8b\u5982\uff1a conf.Body[2].Body[1].Args[0] \u56e0\u6b64\u6211\u4eec\u7f16\u5199\u4e86\u65b9\u4fbf\u7684\u5904\u7406\u65b9\u5f0f\uff1a Marshal/Unmarshal\u6307\u5357 \u6574\u5408\u5230\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u4e2d\u3002 PQL\u67e5\u8be2\u8bed\u8a00 \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00\uff0c\u7b80\u5355\u5feb\u6377\u67e5\u8be2 Note: \u5f00\u6e90\u4f5c\u8005\u7684\u82f1\u8bed\u80fd\u529b\u6709\u9650\uff0c\u7f16\u5199\u6587\u6863\u82f1\u6587\u5168\u9760\u7ffb\u8bd1\u8f6f\u4ef6\uff0c\u96be\u514d\u5b58\u5728\u6b67\u4e49\uff0c \u5982\u679c\u60a8\u53ef\u4ee5\u4e3a\u672c\u8f6f\u4ef6\u7f16\u5199\u82f1\u6587\u6587\u6863\u8bf7\u8054\u7cfb\u4f5c\u8005 Haiker \u6216\u63d0\u4ea4PR\uff0c \u611f\u8c22\u60a8\u5bf9\u672c\u5de5\u5177\u7684\u505a\u51fa\u7684\u8d21\u732e\u3002","title":"\u7ed3\u6784\u8bf4\u660e"},{"location":"pql/","text":"PQL \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00 \u9605\u8bfb\u672c\u7ae0\u8282\u5185\u5bb9\u4e4b\u524d\u60a8\u5fc5\u987b\u5148\u884c\u4e86\u89e3\uff1a \u914d\u7f6e\u6587\u4ef6\u89e3\u6790 \u5982\u679c\u60a8\u9605\u8bfb\u4e86\u4e4b\u524d\u7684\u7ae0\u8282\uff0c\u60a8\u4f1a\u53d1\u73b0\u914d\u7f6e\u5728\u4f7f\u7528\u4e0a\u5176\u5b9e\u5e76\u4e0d\u662f\u7279\u522b\u7b80\u5355\u548c\u660e\u4e86\uff0c \u6211\u4eec\u63d0\u4f9b\u4e86 Marshal/Unmarshal \u65b9\u5f0f\u8ba9\u4f7f\u7528\u66f4\u7b80\u5355\uff0c \u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u914d\u7f6e\u641c\u7d22\u529f\u80fd\uff0c\u7ed9\u4ed6\u5728\u63d2\u4e0a\u4e00\u53cc\u7fc5\u8180\u3002 \u5b9e\u4f8bDemo \u4e3a\u4e86\u8ba9\u672c\u7ae0\u8282\u6240\u6709\u7684\u8bb2\u89e3\u53ef\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a nginx.conf \u6765\u8bf4\u660e\uff1a user nginx; worker_processes auto; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; # access_log /var/log/nginx/access.log main; sendfile on; # tcp_nopush on; keepalive_timeout 65; gzip on; include hosts.d/*.conf; upstream t1 { server 127.0.0.1:8001; } upstream t2 { server 127.0.0.1:8002; } upstream t3 { server 127.0.0.1:8002; } server { listen 80; server_name _; location / { root /Users/haiker/Documents/bootstramp/coreui/dist; index index.html index.htm; } location /health { return 200 'ok'; } } server { listen 80; server_name aginx.x.do; location / { proxy_pass http://t1; gzip on; } } server { listen 80; server_name test.renzhen.la; location / { proxy_pass http://t2; proxy_set_header Host $host; } } } \u5148\u6765\u4e2ademo\u6765\u770b\u770b\uff1a package main import ( \"fmt\" \"github.com/ihaiker/ngx/v2/config\" \"github.com/ihaiker/ngx/v2/query\" ) func main() { conf, err := config.Parse(\"./nginx.conf\") if err != nil { panic(err) } // ----- \u6267\u884c\u67e5\u8be2 ------ items, err := query.Select(conf, \".http.upstream\") if err != nil { panic(err) } fmt.Println(\"\u5305\u542b upstream\uff1a\", len(items)) upstreamT1 := items[0] fmt.Println(\"upstream t1 name: \",upstreamT1.Args[0]) fmt.Println(\"upstream t1 server value:\",upstreamT1.Body.Get(\"server\").Args[0]) upstreamT2 := items[1] fmt.Println(\"upstream t2 name: \",upstreamT2.Args[0]) fmt.Println(\"upstream t2 server value:\",upstreamT2.Body.Get(\"server\").Args[0]) upstreamT3 := items[2] fmt.Println(\"upstream t3 name: \",upstreamT3.Args[0]) fmt.Println(\"upstream t3 server value:\",upstreamT3.Body.Get(\"server\").Args[0]) } \u8bed\u6cd5\u4ecb\u7ecd \u770b\u4e86\u8fd9\u4e2ademo\u4f60\u4f60\u662f\u4e0d\u8981\u6709\u70b9\u5bf9\u4e8epql\u611f\u89c9\u6709\u719f\u6089\u7684\u611f\u89c9\u5462\uff1f\u6ca1\u9519\uff0c\u672c\u5de5\u5177\u5728\u8bbe\u8ba1\u4e0a\u501f\u9274\u4e86json\u67e5\u8be2\u5de5\u5177 jq \u548cyaml\u67e5\u8be2\u5de5\u5177 yq \u3002\u5e76\u4e14\u8bed\u6cd5\u4e0a\u57fa\u672c\u4e00\u81f4\u3002 \u4e0b\u9762\u6211\u4eec\u5c31\u6765\u8be6\u7ec6\u8bf4\u660ePQL\u8bed\u6cd5\u3002 . \u6307\u4ee4 \u76f4\u63a5\u67e5\u8be2\u914d\u7f6e\u6587\u4ef6\u5f53\u524d\u8282\u70b9\u3002 .name \u6216 .name.subname \u6307\u4ee4 \u67e5\u8be2 name \u6216\u8005 name \u5e95\u4e0b subname \u914d\u7f6e\u9879\uff0c\u56e0\u4e3a ngx \u914d\u7f6e\u53ef\u4ee5\u5141\u8bb8\u914d\u7f6e\u9879\u540d\u79f0\u91cd\u590d\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u67e5\u8be2\u90fd\u8fd4\u56de\u7684\u5185\u5bb9\u90fd\u662f\u6570\u7ec4\u3002 \u4f8b\u5982\uff1a .http.server.server_name \u53ef\u4ee5\u67e5\u8be2nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u6709\u7684server_name\uff0c\u8f93\u5165\u5982\u4e0b\uff1a server_name _; server_name aginx.x.do; server_name test.renzhen.la; .!name \uff0c .@name \uff0c .^name \uff0c .$name \u6307\u4ee4 \u8868\u8ff0\u7b26 \u63cf\u8ff0 ! \u914d\u7f6e\u540d\u79f0\u4e0d\u7b49\u4e8ename\u7684\u914d\u7f6e\u9879 @ \u914d\u7f6e\u540d\u79f0\u5305\u542bname\u7684\u914d\u7f6e\u9879 ^ \u914d\u7f6e\u540d\u79f0\u4ee5name\u5f00\u5934\u7684\u914d\u7f6e\u9879 $ \u914d\u7f6e\u540d\u79f0\u4ee5name\u7ed3\u5c3e\u7684\u914d\u7f6e\u9879 ./Regex/ \u6307\u4ee4 \u67e5\u627e\u914d\u7f6e\u9879\u540d\u79f0\u7b26\u5408 Regex \u6b63\u5219\u7684\u914d\u7f6e\u9879\u3002 \u4f8b\u5982\uff1a .http./(server|upstream)/ \u67e5\u8be2 http \u4e0b\u9762\u6240\u6709\u7684 server \u548c upstream .name[0] \u6307\u4ee4 \u67e5\u8be2\u914d\u7f6e\u540d\u79f0\u4e3a name \u7684\u914d\u7f6e\u9879\u7684 \u7b2c\u4e00\u4e2a \uff0c\u5982\u679c\u5e76\u672a\u80fd\u67e5\u8be2\u5230\u76f8\u5e94\u914d\u7f6e\u5c06\u4f1a\u62a5\u9519\u3002 \u4e3a\u4e86\u67e5\u8be2\u65b9\u4fbf\u8f6f\u4ef6\u4e5f\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u65b9\u5f0f\uff1a - .name[start:end] \u67e5\u8be2\u67d0\u4e2a\u533a\u95f4\u7684\u914d\u7f6e\u3002 - .name[start:] \u67e5\u8be2\u4ece\u67d0\u4f4d\u7f6e\u5f00\u59cb\u533a\u95f4\u914d\u7f6e\u3002 - .name[:end] \u67e5\u8be2\u5f00\u59cb\u5230\u67d0\u4e2a\u4f4d\u7f6e\u7684\u533a\u95f4\u914d\u7f6e\u3002 - .name[-1] \u67e5\u8be2\u6700\u540e\u4e00\u4e2a\u914d\u7f6e\u3002 \u4f8b\u5982\uff1a .http.server[1].server_name \u8f93\u51fa\uff1a server_name aginx.x.do; .name(\"value\") \u6307\u4ee4 \u67e5\u8be2\u914d\u7f6e\u4e2d\uff0c\u5305\u542bvalue\u7684\u914d\u7f6e\u9879\u3002 \u4f8b\u5982\uff1a .http.server.server_name(\"_\") \u8f93\u51fa\uff1a server_name _; \u6b64\u5904\u7684value\u4e5f\u540c\u65f6\u652f\u6301\u540d\u79f0\u67e5\u8be2\u7684 ! , @ , ^ , $ \u4ee5\u53ca /value/ \u6b63\u5219\u4e94\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u4e14\u5177\u6709\u76f8\u540c\u610f\u601d\u3002 \u4f8b\u5982\uff1a .http.server.server_name($\"example.com\") \u67e5\u8be2nginx\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86 example.com \u4e00\u7ea7\u57df\u540d\u7684server\u914d\u7f6e .http.server.server_name(^\"test.\") \u67e5\u8be2server\u914d\u7f6e\u4e2d\uff0ctest\u5f00\u59cb\u7684\u57df\u540d\u914d\u7f6e \" | \" \u7ba1\u9053\u5904\u7406 \u6839\u636e\u4e0a\u6b21\u7ed3\u679c\u7ee7\u7eed\u5904\u7406\u3002 .http | .server_name \u548c .http.server_name \u7b49\u4ef7\u3002\u4f46\u662f\u53ea\u662f\u7528\u4f8b\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u591a\u5927\u7528\u5904\uff0c\u4e0d\u8fc7\u6b64\u5904\u5927\u591a\u662f\u4e3a\u4e86\u67e5\u8be2\u65b9\u6cd5\u51c6\u5907\u7684\u3002 \u4f8b\u5982\uff1a .http.server | select(.server_name, \"equal\", \"_\") \u67e5\u8be2 server_name \u4e3a _ \u7684server\u914d\u7f6e\u9879\u3002 \u7cfb\u7edf\u67e5\u8be2\u65b9\u6cd5 \u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e3a\u6570\u4e0d\u591a\u7684\u65b9\u6cd5\uff0c\u8be6\u89c1\u4e0b\u5217\u8868\uff1a select ifelse,not,and,or args index length args_length \u6ce8\u610f\uff1a\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u4f30\u8ba1\u4f60\u5df2\u7ecf\u53d1\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u5c31\u662fselect\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u9879JQ\u6216\u8005YQ\u90a3\u6837\u76f4\u63a5\u4f7f\u7528 select(.server_name equal _) \u8fd9\u6837\u7684\u8bed\u6cd5\uff0c \u4e3b\u8981\u539f\u56e0\u662f\u517c\u5bb9\u6240\u6709\u5b9a\u4e49\u7684\u65b9\u6cd5\u5177\u6709\u76f8\u540c\u7684\u8bed\u6cd5\u3002\uff08\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u4f18\u5316...\u4e0b\u4e2a\u7248\u672c\u89e3\u51b3\u5427\uff09 \u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5 \u4e3a\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\uff0c\u4f60\u9700\u8981\u4f7f\u7528 query.SelectsWith(*config.Configuration, *methods.FunctionManager,string) \u65b9\u6cd5\uff0c\u5e76\u6307\u5b9a\u67e5\u8be2\u65b9\u6cd5\u7ba1\u7406\u5668 *methods.FunctionManager \u3002 \u67e5\u8be2\u65b9\u6cd5\u7ba1\u7406\u5668\u53ef\u4ee5\u6ce8\u518c\u4efb\u4f55\u65b9\u6cd5\uff0c\u53ea\u8981\u7b26\u5408\u4e00\u4e0b\u6761\u4ef6\u5373\u53ef\u3002 \u8f93\u5165\u53c2\u6570\u53ea\u80fd\u4e3a\uff1a error , string , int , config.Directive , bool , interface {} \u7c7b\u578b\uff0c\u6216\u8005\u5bf9\u5e94\u7684\u5207\u7247\u7c7b\u578b\u3002 \u8f93\u51fa\u53c2\u6570\u6700\u591a\u53ef\u4ee5\u6709\u4e24\u4e2a\uff0c\u4e14\u7b2c\u4e8c\u4e2a\u5fc5\u987b\u662ferror\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2a\u8981\u7b26\u5408\u548c\u65f6\u8f93\u5165\u53c2\u6570\u4e00\u6837\u7684\u7c7b\u578b\u3002","title":"\u914d\u7f6e\u67e5\u8be2\u8bed\u8a00PQL"},{"location":"pql/#pql","text":"\u9605\u8bfb\u672c\u7ae0\u8282\u5185\u5bb9\u4e4b\u524d\u60a8\u5fc5\u987b\u5148\u884c\u4e86\u89e3\uff1a \u914d\u7f6e\u6587\u4ef6\u89e3\u6790 \u5982\u679c\u60a8\u9605\u8bfb\u4e86\u4e4b\u524d\u7684\u7ae0\u8282\uff0c\u60a8\u4f1a\u53d1\u73b0\u914d\u7f6e\u5728\u4f7f\u7528\u4e0a\u5176\u5b9e\u5e76\u4e0d\u662f\u7279\u522b\u7b80\u5355\u548c\u660e\u4e86\uff0c \u6211\u4eec\u63d0\u4f9b\u4e86 Marshal/Unmarshal \u65b9\u5f0f\u8ba9\u4f7f\u7528\u66f4\u7b80\u5355\uff0c \u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u914d\u7f6e\u641c\u7d22\u529f\u80fd\uff0c\u7ed9\u4ed6\u5728\u63d2\u4e0a\u4e00\u53cc\u7fc5\u8180\u3002","title":"PQL \u914d\u7f6e\u67e5\u8be2\u8bed\u8a00"},{"location":"pql/#demo","text":"\u4e3a\u4e86\u8ba9\u672c\u7ae0\u8282\u6240\u6709\u7684\u8bb2\u89e3\u53ef\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a nginx.conf \u6765\u8bf4\u660e\uff1a user nginx; worker_processes auto; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; # access_log /var/log/nginx/access.log main; sendfile on; # tcp_nopush on; keepalive_timeout 65; gzip on; include hosts.d/*.conf; upstream t1 { server 127.0.0.1:8001; } upstream t2 { server 127.0.0.1:8002; } upstream t3 { server 127.0.0.1:8002; } server { listen 80; server_name _; location / { root /Users/haiker/Documents/bootstramp/coreui/dist; index index.html index.htm; } location /health { return 200 'ok'; } } server { listen 80; server_name aginx.x.do; location / { proxy_pass http://t1; gzip on; } } server { listen 80; server_name test.renzhen.la; location / { proxy_pass http://t2; proxy_set_header Host $host; } } } \u5148\u6765\u4e2ademo\u6765\u770b\u770b\uff1a package main import ( \"fmt\" \"github.com/ihaiker/ngx/v2/config\" \"github.com/ihaiker/ngx/v2/query\" ) func main() { conf, err := config.Parse(\"./nginx.conf\") if err != nil { panic(err) } // ----- \u6267\u884c\u67e5\u8be2 ------ items, err := query.Select(conf, \".http.upstream\") if err != nil { panic(err) } fmt.Println(\"\u5305\u542b upstream\uff1a\", len(items)) upstreamT1 := items[0] fmt.Println(\"upstream t1 name: \",upstreamT1.Args[0]) fmt.Println(\"upstream t1 server value:\",upstreamT1.Body.Get(\"server\").Args[0]) upstreamT2 := items[1] fmt.Println(\"upstream t2 name: \",upstreamT2.Args[0]) fmt.Println(\"upstream t2 server value:\",upstreamT2.Body.Get(\"server\").Args[0]) upstreamT3 := items[2] fmt.Println(\"upstream t3 name: \",upstreamT3.Args[0]) fmt.Println(\"upstream t3 server value:\",upstreamT3.Body.Get(\"server\").Args[0]) }","title":"\u5b9e\u4f8bDemo"},{"location":"pql/#_1","text":"\u770b\u4e86\u8fd9\u4e2ademo\u4f60\u4f60\u662f\u4e0d\u8981\u6709\u70b9\u5bf9\u4e8epql\u611f\u89c9\u6709\u719f\u6089\u7684\u611f\u89c9\u5462\uff1f\u6ca1\u9519\uff0c\u672c\u5de5\u5177\u5728\u8bbe\u8ba1\u4e0a\u501f\u9274\u4e86json\u67e5\u8be2\u5de5\u5177 jq \u548cyaml\u67e5\u8be2\u5de5\u5177 yq \u3002\u5e76\u4e14\u8bed\u6cd5\u4e0a\u57fa\u672c\u4e00\u81f4\u3002 \u4e0b\u9762\u6211\u4eec\u5c31\u6765\u8be6\u7ec6\u8bf4\u660ePQL\u8bed\u6cd5\u3002","title":"\u8bed\u6cd5\u4ecb\u7ecd"},{"location":"pql/#_2","text":"\u76f4\u63a5\u67e5\u8be2\u914d\u7f6e\u6587\u4ef6\u5f53\u524d\u8282\u70b9\u3002","title":". \u6307\u4ee4"},{"location":"pql/#namenamesubname","text":"\u67e5\u8be2 name \u6216\u8005 name \u5e95\u4e0b subname \u914d\u7f6e\u9879\uff0c\u56e0\u4e3a ngx \u914d\u7f6e\u53ef\u4ee5\u5141\u8bb8\u914d\u7f6e\u9879\u540d\u79f0\u91cd\u590d\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u67e5\u8be2\u90fd\u8fd4\u56de\u7684\u5185\u5bb9\u90fd\u662f\u6570\u7ec4\u3002 \u4f8b\u5982\uff1a .http.server.server_name \u53ef\u4ee5\u67e5\u8be2nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u6709\u7684server_name\uff0c\u8f93\u5165\u5982\u4e0b\uff1a server_name _; server_name aginx.x.do; server_name test.renzhen.la;","title":".name\u6216.name.subname \u6307\u4ee4"},{"location":"pql/#namenamenamename","text":"\u8868\u8ff0\u7b26 \u63cf\u8ff0 ! \u914d\u7f6e\u540d\u79f0\u4e0d\u7b49\u4e8ename\u7684\u914d\u7f6e\u9879 @ \u914d\u7f6e\u540d\u79f0\u5305\u542bname\u7684\u914d\u7f6e\u9879 ^ \u914d\u7f6e\u540d\u79f0\u4ee5name\u5f00\u5934\u7684\u914d\u7f6e\u9879 $ \u914d\u7f6e\u540d\u79f0\u4ee5name\u7ed3\u5c3e\u7684\u914d\u7f6e\u9879","title":".!name\uff0c.@name\uff0c.^name\uff0c.$name \u6307\u4ee4"},{"location":"pql/#regex","text":"\u67e5\u627e\u914d\u7f6e\u9879\u540d\u79f0\u7b26\u5408 Regex \u6b63\u5219\u7684\u914d\u7f6e\u9879\u3002 \u4f8b\u5982\uff1a .http./(server|upstream)/ \u67e5\u8be2 http \u4e0b\u9762\u6240\u6709\u7684 server \u548c upstream","title":"./Regex/ \u6307\u4ee4"},{"location":"pql/#name0","text":"\u67e5\u8be2\u914d\u7f6e\u540d\u79f0\u4e3a name \u7684\u914d\u7f6e\u9879\u7684 \u7b2c\u4e00\u4e2a \uff0c\u5982\u679c\u5e76\u672a\u80fd\u67e5\u8be2\u5230\u76f8\u5e94\u914d\u7f6e\u5c06\u4f1a\u62a5\u9519\u3002 \u4e3a\u4e86\u67e5\u8be2\u65b9\u4fbf\u8f6f\u4ef6\u4e5f\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u65b9\u5f0f\uff1a - .name[start:end] \u67e5\u8be2\u67d0\u4e2a\u533a\u95f4\u7684\u914d\u7f6e\u3002 - .name[start:] \u67e5\u8be2\u4ece\u67d0\u4f4d\u7f6e\u5f00\u59cb\u533a\u95f4\u914d\u7f6e\u3002 - .name[:end] \u67e5\u8be2\u5f00\u59cb\u5230\u67d0\u4e2a\u4f4d\u7f6e\u7684\u533a\u95f4\u914d\u7f6e\u3002 - .name[-1] \u67e5\u8be2\u6700\u540e\u4e00\u4e2a\u914d\u7f6e\u3002 \u4f8b\u5982\uff1a .http.server[1].server_name \u8f93\u51fa\uff1a server_name aginx.x.do;","title":".name[0] \u6307\u4ee4"},{"location":"pql/#namevalue","text":"\u67e5\u8be2\u914d\u7f6e\u4e2d\uff0c\u5305\u542bvalue\u7684\u914d\u7f6e\u9879\u3002 \u4f8b\u5982\uff1a .http.server.server_name(\"_\") \u8f93\u51fa\uff1a server_name _; \u6b64\u5904\u7684value\u4e5f\u540c\u65f6\u652f\u6301\u540d\u79f0\u67e5\u8be2\u7684 ! , @ , ^ , $ \u4ee5\u53ca /value/ \u6b63\u5219\u4e94\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u4e14\u5177\u6709\u76f8\u540c\u610f\u601d\u3002 \u4f8b\u5982\uff1a .http.server.server_name($\"example.com\") \u67e5\u8be2nginx\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86 example.com \u4e00\u7ea7\u57df\u540d\u7684server\u914d\u7f6e .http.server.server_name(^\"test.\") \u67e5\u8be2server\u914d\u7f6e\u4e2d\uff0ctest\u5f00\u59cb\u7684\u57df\u540d\u914d\u7f6e","title":".name(\"value\") \u6307\u4ee4"},{"location":"pql/#_3","text":"\u6839\u636e\u4e0a\u6b21\u7ed3\u679c\u7ee7\u7eed\u5904\u7406\u3002 .http | .server_name \u548c .http.server_name \u7b49\u4ef7\u3002\u4f46\u662f\u53ea\u662f\u7528\u4f8b\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u591a\u5927\u7528\u5904\uff0c\u4e0d\u8fc7\u6b64\u5904\u5927\u591a\u662f\u4e3a\u4e86\u67e5\u8be2\u65b9\u6cd5\u51c6\u5907\u7684\u3002 \u4f8b\u5982\uff1a .http.server | select(.server_name, \"equal\", \"_\") \u67e5\u8be2 server_name \u4e3a _ \u7684server\u914d\u7f6e\u9879\u3002","title":"\" | \" \u7ba1\u9053\u5904\u7406"},{"location":"pql/#_4","text":"\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e3a\u6570\u4e0d\u591a\u7684\u65b9\u6cd5\uff0c\u8be6\u89c1\u4e0b\u5217\u8868\uff1a select ifelse,not,and,or args index length args_length \u6ce8\u610f\uff1a\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u4f30\u8ba1\u4f60\u5df2\u7ecf\u53d1\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u5c31\u662fselect\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u9879JQ\u6216\u8005YQ\u90a3\u6837\u76f4\u63a5\u4f7f\u7528 select(.server_name equal _) \u8fd9\u6837\u7684\u8bed\u6cd5\uff0c \u4e3b\u8981\u539f\u56e0\u662f\u517c\u5bb9\u6240\u6709\u5b9a\u4e49\u7684\u65b9\u6cd5\u5177\u6709\u76f8\u540c\u7684\u8bed\u6cd5\u3002\uff08\u8fd9\u4e2a\u5730\u65b9\u9700\u8981\u4f18\u5316...\u4e0b\u4e2a\u7248\u672c\u89e3\u51b3\u5427\uff09","title":"\u7cfb\u7edf\u67e5\u8be2\u65b9\u6cd5"},{"location":"pql/#_5","text":"\u4e3a\u4e86\u4f7f\u7528\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\uff0c\u4f60\u9700\u8981\u4f7f\u7528 query.SelectsWith(*config.Configuration, *methods.FunctionManager,string) \u65b9\u6cd5\uff0c\u5e76\u6307\u5b9a\u67e5\u8be2\u65b9\u6cd5\u7ba1\u7406\u5668 *methods.FunctionManager \u3002 \u67e5\u8be2\u65b9\u6cd5\u7ba1\u7406\u5668\u53ef\u4ee5\u6ce8\u518c\u4efb\u4f55\u65b9\u6cd5\uff0c\u53ea\u8981\u7b26\u5408\u4e00\u4e0b\u6761\u4ef6\u5373\u53ef\u3002 \u8f93\u5165\u53c2\u6570\u53ea\u80fd\u4e3a\uff1a error , string , int , config.Directive , bool , interface {} \u7c7b\u578b\uff0c\u6216\u8005\u5bf9\u5e94\u7684\u5207\u7247\u7c7b\u578b\u3002 \u8f93\u51fa\u53c2\u6570\u6700\u591a\u53ef\u4ee5\u6709\u4e24\u4e2a\uff0c\u4e14\u7b2c\u4e8c\u4e2a\u5fc5\u987b\u662ferror\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2a\u8981\u7b26\u5408\u548c\u65f6\u8f93\u5165\u53c2\u6570\u4e00\u6837\u7684\u7c7b\u578b\u3002","title":"\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5"},{"location":"functions/","text":"","title":"Index"},{"location":"functions/args/","text":"","title":"Args"},{"location":"functions/args_length/","text":"","title":"Args length"},{"location":"functions/grammar/","text":"","title":"Grammar"},{"location":"functions/has/","text":"","title":"Has"},{"location":"functions/length/","text":"","title":"Length"},{"location":"functions/select/","text":"Select","title":"Select"},{"location":"functions/select/#select","text":"","title":"Select"},{"location":"versions/","text":"\u7248\u672c\u66f4\u65b0\u5386\u53f2 V2.0.2 \u53d1\u5e03\u4e8e\uff1a2021.06.27 V0.2.0 \u53d1\u5e03\u4e8e\uff1a2021.06.10 V0.1.4","title":"\u7248\u672c\u5386\u53f2"},{"location":"versions/#_1","text":"V2.0.2 \u53d1\u5e03\u4e8e\uff1a2021.06.27 V0.2.0 \u53d1\u5e03\u4e8e\uff1a2021.06.10 V0.1.4","title":"\u7248\u672c\u66f4\u65b0\u5386\u53f2"},{"location":"versions/v0.2.0/","text":"\u91cd\u6784\u5347\u7ea7 PQL \u91cd\u5199\uff0c\u652f\u6301\u4f7f\u7528\u65b9\u6cd5\u548c\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\u3002 \u6dfb\u52a0 NGXQ \u5de5\u5177\uff0c\u4e3angx\u914d\u7f6e\u6587\u4ef6\u7684\u67e5\u8be2\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\u4e8ejson\u7684\u67e5\u8be2\u5de5\u5177 JQ \u548cyaml\u7684\u67e5\u8be2 YQ \u3002 \u6dfb\u52a0\u89e3\u6790\u540e\u7f6e\u64cd\u4f5cPost-hooks\uff0c\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u7684\u7279\u51fa\u914d\u7f6e\u9879\u4f8b\u5982\uff1a include \u914d\u7f6e\u5904\u7406\uff0c\u6216\u8005\u52a8\u6001\u914d\u7f6e\u5185\u5bb9\u83b7\u53d6 ${.env.HOME} \u3002 \u914d\u7f6e\u6587\u4ef6\u548cGolang\u7ed3\u6784\u4f53\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u63d0\u4f9b\u8f6c\u6362\u63a5\u53e3\u6ce8\u518c\u548c\u7c7b\u578b\u6ce8\u518c\u4e24\u79cd\u65b9\u5f0f\uff0c\u65b9\u4fbf\u6269\u5c55\u3002","title":"V0.2.0"},{"location":"versions/v0.2.0/#_1","text":"PQL \u91cd\u5199\uff0c\u652f\u6301\u4f7f\u7528\u65b9\u6cd5\u548c\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\u3002 \u6dfb\u52a0 NGXQ \u5de5\u5177\uff0c\u4e3angx\u914d\u7f6e\u6587\u4ef6\u7684\u67e5\u8be2\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\u4e8ejson\u7684\u67e5\u8be2\u5de5\u5177 JQ \u548cyaml\u7684\u67e5\u8be2 YQ \u3002 \u6dfb\u52a0\u89e3\u6790\u540e\u7f6e\u64cd\u4f5cPost-hooks\uff0c\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u7684\u7279\u51fa\u914d\u7f6e\u9879\u4f8b\u5982\uff1a include \u914d\u7f6e\u5904\u7406\uff0c\u6216\u8005\u52a8\u6001\u914d\u7f6e\u5185\u5bb9\u83b7\u53d6 ${.env.HOME} \u3002 \u914d\u7f6e\u6587\u4ef6\u548cGolang\u7ed3\u6784\u4f53\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u63d0\u4f9b\u8f6c\u6362\u63a5\u53e3\u6ce8\u518c\u548c\u7c7b\u578b\u6ce8\u518c\u4e24\u79cd\u65b9\u5f0f\uff0c\u65b9\u4fbf\u6269\u5c55\u3002","title":"\u91cd\u6784\u5347\u7ea7"},{"location":"versions/v2.0.2/","text":"BUG: \u4fee\u590d\u7248 \u4fee\u590d@repeat\u6307\u4ee4\u5d4c\u5957\u540e\u7684\u95ee\u9898\u4fee\u590d \u65b0\u52a0@if\u6307\u4ee4","title":"BUG: \u4fee\u590d\u7248"},{"location":"versions/v2.0.2/#bug","text":"\u4fee\u590d@repeat\u6307\u4ee4\u5d4c\u5957\u540e\u7684\u95ee\u9898\u4fee\u590d \u65b0\u52a0@if\u6307\u4ee4","title":"BUG: \u4fee\u590d\u7248"}]}